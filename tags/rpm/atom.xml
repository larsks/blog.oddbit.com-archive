<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rpm on The Odd Bit</title>

  
  <link rel="self" href="http://blog.oddbit.com/tags/rpm/atom.xml"/>
  
  <link href="http://blog.oddbit.com/tags/rpm/" rel="alternate"></link>

  <updated>2011-07-26T00:00:00Z</updated>
  <id>http://blog.oddbit.com/tags/rpm/</id>
  
  <entry>
    <title>Fixing RPM with evil magic</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2011-07-26-fixing-rpm-with-evil-magic/"/>
    <id>http://blog.oddbit.com/post/2011-07-26-fixing-rpm-with-evil-magic/</id>
    <published>2011-07-26T00:00:00Z</published>
    <updated>2011-07-26T00:00:00Z</updated>
    <summary>Fixing rpmsign with evil magic At my office we are developing a deployment mechanism for RPM packages. The general workflow looks like this:
 You build a source rpm on your own machine. You sign the rpm with your GPG key. You submit the source RPM to our buildserver. The buildserver validates your signature and then builds the package. The buildserver signs the package using a master signing key.  The last step in that sequence represents a problem, because the rpmsign command will always, always prompt for a password and read the response from /dev/tty.</summary>
  </entry>
  
</feed>
