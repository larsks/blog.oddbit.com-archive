<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ansible on The Odd Bit</title>

  
  <link rel="self" href="http://blog.oddbit.com/tags/ansible/atom.xml"/>
  
  <link href="http://blog.oddbit.com/tags/ansible/" rel="alternate"></link>                                      â”‚1557152283 127.0.0.1 "GET /dist/styles.css" 304 136 "http://localhost:1313/" "Mozilla/5.0 (X11;

  <updated>2019-04-26T00:00:00Z</updated>
  <id>http://blog.oddbit.com/tags/ansible/</id>
  
  <entry>
    <title>Adding support for privilege escalation to Ansible&#39;s docker connection driver</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2019-04-26-adding-support-for-privilege-e/"/>
    <id>http://blog.oddbit.com/post/2019-04-26-adding-support-for-privilege-e/</id>
    <published>2019-04-26T00:00:00Z</published>
    <updated>2019-04-26T00:00:00Z</updated>
    <summary>I often use Docker to test out Ansible playbooks. While normally that works great, I recently ran into an unexpected problem with privilege escalation. Given a simple playbook like this:
--- - hosts: all gather_facts: false become: true tasks: - ping:  And an inventory like this:
all: vars: ansible_user: example ansible_connection: docker hosts: server1: ansible_host: sudostuff_server1_1 server2: ansible_host: sudostuff_server2_1 server3: ansible_host: sudostuff_server3_1  And containers with sudo configured to require a password, Ansible would fail like this (note that I&amp;rsquo;ve configured Ansible to use the debug plugin for stdout_callback):</summary>
  </entry>
  
  <entry>
    <title>Writing Ansible filter plugins</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2019-04-25-writing-ansible-filter-plugins/"/>
    <id>http://blog.oddbit.com/post/2019-04-25-writing-ansible-filter-plugins/</id>
    <published>2019-04-25T00:00:00Z</published>
    <updated>2019-04-25T00:00:00Z</updated>
    <summary>I often see questions from people who are attemping to perform complex text transformations in their Ansible playbooks. While I am a huge fan of Ansible, data transformation is not one of its strong points. For example, this past week someone asked a question on Stack Overflow in which they were attempting to convert the output of the keytool command into a list of dictionaries. The output of the keytool -list -v command looks something like this:</summary>
  </entry>
  
  <entry>
    <title>Integrating Bitwarden with Ansible</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2018-10-19-integrating-bitwarden-with-ans/"/>
    <id>http://blog.oddbit.com/post/2018-10-19-integrating-bitwarden-with-ans/</id>
    <published>2018-10-19T00:00:00Z</published>
    <updated>2018-10-19T00:00:00Z</updated>
    <summary>Bitwarden is a password management service (like LastPass or 1Password). It&amp;rsquo;s unique in that it is built entirely on open source software. In addition to the the web UI and mobile apps that you would expect, Bitwarden also provides a command-line tool for interacting with the your password store.
At $WORK(-ish) we&amp;rsquo;re looking into Bitwarden because we want a password sharing and management solution that was better than dropping files into directories on remote hosts or sharing things over Slack.</summary>
  </entry>
  
  <entry>
    <title>Safely restarting an OpenStack server with Ansible</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2018-01-24-safely-restarting-an-openstack-server-wi/"/>
    <id>http://blog.oddbit.com/post/2018-01-24-safely-restarting-an-openstack-server-wi/</id>
    <published>2018-01-24T00:00:00Z</published>
    <updated>2018-01-24T00:00:00Z</updated>
    <summary>The other day on #ansible, someone was looking for a way to safely shut down a Nova server, wait for it to stop, and then start it up again using the openstack cli. The first part seemed easy:
- hosts: myserver tasks: - name: shut down the server command: poweroff become: true  &amp;hellip;but that will actually fail with the following result:
TASK [shut down server] ************************************* fatal: [myserver]: UNREACHABLE! =&amp;gt; {&amp;quot;changed&amp;quot;: false, &amp;quot;msg&amp;quot;: &amp;quot;Failed to connect to the host via ssh: Shared connection to 10.</summary>
  </entry>
  
  <entry>
    <title>Ansible for Infrastructure Testing</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2017-08-02-ansible-for-infrastructure-testing/"/>
    <id>http://blog.oddbit.com/post/2017-08-02-ansible-for-infrastructure-testing/</id>
    <published>2017-08-02T00:00:00Z</published>
    <updated>2017-08-02T00:00:00Z</updated>
    <summary>At $JOB we often find ourselves at customer sites where we see the same set of basic problems that we have previously encountered elsewhere (&amp;ldquo;your clocks aren&amp;rsquo;t in sync&amp;rdquo; or &amp;ldquo;your filesystem is full&amp;rdquo; or &amp;ldquo;you haven&amp;rsquo;t installed a critical update&amp;rdquo;, etc). We would like a simple tool that could be run either by the customer or by our own engineers to test for and report on these common issues.</summary>
  </entry>
  
  <entry>
    <title>Deploying an HA OpenStack development environment with tripleo-quickstart
</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2016-02-19-deploy-an-ha-openstack-development-envir/"/>
    <id>http://blog.oddbit.com/post/2016-02-19-deploy-an-ha-openstack-development-envir/</id>
    <published>2016-02-19T00:00:00Z</published>
    <updated>2016-02-19T00:00:00Z</updated>
    <summary>In this article I would like to introduce tripleo-quickstart, a tool that will automatically provision a virtual environment and then use TripleO to deploy an HA OpenStack on top of it.
Introducing Tripleo-Quickstart The goal of the Tripleo-Quickstart project is to replace the instack-virt-setup tool for quickly setting up virtual TripleO environments, and to ultimately become the tool used by both developers and upstream CI for this purpose. The project is a set of Ansible playbooks that will take care of:</summary>
  </entry>
  
  <entry>
    <title>A systemd-nspawn connection driver for Ansible</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2016-02-08-a-systemd-nspawn-connection-driver-for-a/"/>
    <id>http://blog.oddbit.com/post/2016-02-08-a-systemd-nspawn-connection-driver-for-a/</id>
    <published>2016-02-08T00:00:00Z</published>
    <updated>2016-02-08T00:00:00Z</updated>
    <summary>I wrote earlier about systemd-nspawn, and how it can take much of the fiddly work out of setting up functional chroot environments. I&amp;rsquo;m a regular Ansible user, and I wanted to be able to apply some of those techniques to my playbooks.
Ansible already has a chroot module, of course, but for some situations &amp;ndash; such as targeting an emulated chroot environment &amp;ndash; that just means a lot of extra work.</summary>
  </entry>
  
  <entry>
    <title>Folding long lines in Ansible inventory files</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2016-02-07-folding-long-lines-in-ansible-inventory-/"/>
    <id>http://blog.oddbit.com/post/2016-02-07-folding-long-lines-in-ansible-inventory-/</id>
    <published>2016-02-07T00:00:00Z</published>
    <updated>2016-02-07T00:00:00Z</updated>
    <summary>If you have an Ansible inventory file that includes lots of per host variables, it&amp;rsquo;s not unusual for lines to get long enough that they become unwieldly, particularly if you want to discuss them in an email or write about them in some context (e.g., a blog post).
I&amp;rsquo;ve just submitted pull request #14359 to Ansible which implements support for folding long lines using the INI-format convention of using indent to mark extended logical lines.</summary>
  </entry>
  
  <entry>
    <title>Ansible 2.0: New OpenStack modules</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2015-10-26-ansible-20-new-openstack-modules/"/>
    <id>http://blog.oddbit.com/post/2015-10-26-ansible-20-new-openstack-modules/</id>
    <published>2015-10-26T00:00:00Z</published>
    <updated>2015-10-26T00:00:00Z</updated>
    <summary>This is the second in a loose sequence of articles looking at new features in Ansible 2.0. In the previous article I looked at the Docker connection driver. In this article, I would like to provide an overview of the new-and-much-improved suite of modules for interacting with an OpenStack environment, and provide a few examples of their use.
In versions of Ansible prior to 2.0, there was a small collection of OpenStack modules.</summary>
  </entry>
  
  <entry>
    <title>Stupid Ansible Tricks: Running a role from the command line</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2015-10-19-stupid-ansible-tricks-running-a-role-from-the-command-line/"/>
    <id>http://blog.oddbit.com/post/2015-10-19-stupid-ansible-tricks-running-a-role-from-the-command-line/</id>
    <published>2015-10-19T00:00:00Z</published>
    <updated>2015-10-19T00:00:00Z</updated>
    <summary>When writing Ansible roles I occasionally want a way to just run a role from the command line, without having to muck about with a playbook. I&amp;rsquo;ve seen similar requests on the mailing lists and on irc.
I&amp;rsquo;ve thrown together a quick wrapper that will allow you (and me!) to do exactly that, called ansible-role. The --help output looks like this:
usage: ansible-role [-h] [--verbose] [--gather] [--no-gather] [--extra-vars EXTRA_VARS] [-i INVENTORY] [--hosts HOSTS] [--sudo] [--become] [--user USER] role positional arguments: role optional arguments: -h, --help show this help message and exit --verbose, -v --gather, -g --no-gather, -G --extra-vars EXTRA_VARS, -e EXTRA_VARS Inventory: -i INVENTORY, --inventory INVENTORY --hosts HOSTS, -H HOSTS Identity: --sudo, -s --become, -b --user USER, -u USER  Example If you have a role roles/testrole that contains the following in tasks/main.</summary>
  </entry>
  
  <entry>
    <title>Bootstrapping Ansible on Fedora 23</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2015-10-15-bootstrapping-ansible-on-fedora-23/"/>
    <id>http://blog.oddbit.com/post/2015-10-15-bootstrapping-ansible-on-fedora-23/</id>
    <published>2015-10-15T00:00:00Z</published>
    <updated>2015-10-15T00:00:00Z</updated>
    <summary>If you&amp;rsquo;ve tried running Ansible against a Fedora 23 system, you may have run into the following problem:
fatal: [myserver]: FAILED! =&amp;gt; {&amp;quot;changed&amp;quot;: false, &amp;quot;failed&amp;quot;: true, &amp;quot;msg&amp;quot;: &amp;quot;/bin/sh: /usr/bin/python: No such file or directory\r\n&amp;quot;, &amp;quot;parsed&amp;quot;: false}  Fedora has recently made the switch to only including Python 3 on the base system (at least for the cloud variant), while Ansible still requires Python 2. With Fedora 23, Python 3 is available as /usr/bin/python3, and /usr/bin/python is only available if you have installed the Python 2 interpreter.</summary>
  </entry>
  
  <entry>
    <title>Ansible 2.0: The Docker connection driver</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2015-10-13-ansible-20-the-docker-connection-driver/"/>
    <id>http://blog.oddbit.com/post/2015-10-13-ansible-20-the-docker-connection-driver/</id>
    <published>2015-10-13T00:00:00Z</published>
    <updated>2015-10-13T00:00:00Z</updated>
    <summary>As the release of Ansible 2.0 draws closer, I&amp;rsquo;d like to take a look at some of the new features that are coming down the pipe. In this post, we&amp;rsquo;ll look at the docker connection driver.
A &amp;ldquo;connection driver&amp;rdquo; is the mechanism by which Ansible connects to your target hosts. These days it uses ssh by default (which relies on the OpenSSH command line client for connectivity), and it also offers the Paramiko library as an alternative ssh implementation (this was in fact the default driver in earlier versions of Ansible).</summary>
  </entry>
  
</feed>
