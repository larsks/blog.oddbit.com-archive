<feed xmlns="http://www.w3.org/2005/Atom">
  <title>stackexchange on The Odd Bit</title>

  <link rel="self" href="/tags/stackexchange/"/>
  <link href="//blog.oddbit.com/" rel="alternate"></link>                                      â”‚1557152283 127.0.0.1 "GET /dist/styles.css" 304 136 "http://localhost:1313/" "Mozilla/5.0 (X11;

  <updated>2019-05-07T00:00:00+0000</updated>
  <id>/tags/stackexchange/</id>
  
  <entry>
    <title>Unpacking a Python regular expression</title>
    <link rel="alternate" href="/post/2019-05-07-unpacking-a-python-regular-exp/"/>
    <id>/post/2019-05-07-unpacking-a-python-regular-exp/</id>
    <published>2019-05-07T00:00:00+0000</published>
    <updated>2019-05-07T00:00:00+0000</updated>
    <summary>I recently answered a question from Harsha Nalore on StackOverflow that involved using Ansible to extract the output of a command sent to a BigIP device of some sort. My solution &amp;ndash; which I claim to be functional, but probably not optimal &amp;ndash; involved writing an Ansible filter module to parse the output. That filter made use of a complex-looking regular expression. Harsha asked for some details on that regular expression works, and the existing StackOverflow answer didn&amp;rsquo;t really seem the write place for that: so, here we are.</summary>
  </entry>
  
</feed>
