<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gdb on The Odd Bit</title>
    <link>/tags/gdb/</link>
    <description>Recent content in gdb on The Odd Bit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/gdb/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Debugging attiny85 code, part 1: simavr and gdb</title>
      <link>/post/2019-01-22-debugging-attiny-code-pt-1/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-01-22-debugging-attiny-code-pt-1/</guid>
      <description>In a case of awful timing, after my recent project involving some attiny85 programming I finally got around to learning how to use simavr and gdb to help debug my AVR code. It was too late for me (and I will never get the time back that I spent debugging things with an LED and lots of re-flashing), but maybe this will help someone else!
I&amp;rsquo;ve split this into three posts:</description>
    </item>
    
    <item>
      <title>Debugging attiny85 code, part 2: Automating GDB with scripts</title>
      <link>/post/2019-01-22-debugging-attiny-code-pt-2/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-01-22-debugging-attiny-code-pt-2/</guid>
      <description>This is the second of three posts about using gdb and simavr to debug AVR code. The complete series is:
 Part 1: Using GDB
A walkthrough of using GDB to manually inspect the behavior of our code.
 Part 2: Automating GDB with scripts
Creating GDB scripts to automatically test the behavior of our code.
 Part 3: Tracing with simavr
Using simavr to collect information about the state of microcontroller pins while our code is running.</description>
    </item>
    
    <item>
      <title>Debugging attiny85 code, part 3: Tracing with simavr</title>
      <link>/post/2019-01-22-debugging-attiny-code-pt-3/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-01-22-debugging-attiny-code-pt-3/</guid>
      <description>This is the third of three posts about using gdb and simavr to debug AVR code. The complete series is:
 Part 1: Using GDB
A walkthrough of using GDB to manually inspect the behavior of our code.
 Part 2: Automating GDB with scripts
Creating GDB scripts to automatically test the behavior of our code.
 Part 3: Tracing with simavr
Using simavr to collect information about the state of microcontroller pins while our code is running.</description>
    </item>
    
  </channel>
</rss>