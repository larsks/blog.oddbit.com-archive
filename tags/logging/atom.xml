<feed xmlns="http://www.w3.org/2005/Atom">
  <title>logging on The Odd Bit</title>

  
  <link rel="self" href="http://blog.oddbit.com/tags/logging/atom.xml"/>
  
  <link href="http://blog.oddbit.com/tags/logging/" rel="alternate"></link>

  <updated>2017-06-14T00:00:00Z</updated>
  <id>http://blog.oddbit.com/tags/logging/</id>
  
  <entry>
    <title>OpenStack, Containers, and Logging</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2017-06-14-openstack-containers-and-logging/"/>
    <id>http://blog.oddbit.com/post/2017-06-14-openstack-containers-and-logging/</id>
    <published>2017-06-14T00:00:00Z</published>
    <updated>2017-06-14T00:00:00Z</updated>
    <summary>I&amp;rsquo;ve been thinking about logging in the context of OpenStack and containerized service deployments. I&amp;rsquo;d like to lay out some of my thoughts on this topic and see if people think I am talking crazy or not.
There are effectively three different mechanisms that an application can use to emit log messages:
 Via some logging-specific API, such as the legacy syslog API By writing a byte stream to stdout/stderr By writing a byte stream to a file  A substantial advantage to the first mechanism (using a logging API) is that the application is logging messages rather than bytes.</summary>
  </entry>
  
  <entry>
    <title>Apache virtual host statistics</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2010-02-19-apache-virtual-host-statistics/"/>
    <id>http://blog.oddbit.com/post/2010-02-19-apache-virtual-host-statistics/</id>
    <published>2010-02-19T00:00:00Z</published>
    <updated>2010-02-19T00:00:00Z</updated>
    <summary>As part of a project I&amp;rsquo;m working on I wanted to get a rough idea of the activity of the Apache virtual hosts on the system. I wasn&amp;rsquo;t able to find exactly what I wanted, so I refreshed my memory of curses to bring you vhoststats.
This tools reads an Apache log file (with support for arbitrary formats) and generates a dynamic bar chart showing the activity (in number of requests and bytes transferred) of hosts on the system.</summary>
  </entry>
  
</feed>
