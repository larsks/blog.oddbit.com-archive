<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nova on The Odd Bit</title>

  
  <link rel="self" href="http://blog.oddbit.com/tags/nova/atom.xml"/>
  
  <link href="http://blog.oddbit.com/tags/nova/" rel="alternate"></link>

  <updated>2015-06-26T00:00:00Z</updated>
  <id>http://blog.oddbit.com/tags/nova/</id>
  
  <entry>
    <title>OpenStack Networking without DHCP</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2015-06-26-openstack-networking-without-dhcp/"/>
    <id>http://blog.oddbit.com/post/2015-06-26-openstack-networking-without-dhcp/</id>
    <published>2015-06-26T00:00:00Z</published>
    <updated>2015-06-26T00:00:00Z</updated>
    <summary>In an OpenStack environment, cloud-init generally fetches information from the metadata service provided by Nova. It also has support for reading this information from a configuration drive, which under OpenStack means a virtual CD-ROM device attached to your instance containing the same information that would normally be available via the metadata service.
It is possible to generate your network configuration from this configuration drive, rather than relying on the DHCP server provided by your OpenStack environment.</summary>
  </entry>
  
  <entry>
    <title>Installing nova-docker on Fedora 21/RDO Juno</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2015-02-06-installing-nova-docker-on-fedora-21/"/>
    <id>http://blog.oddbit.com/post/2015-02-06-installing-nova-docker-on-fedora-21/</id>
    <published>2015-02-06T00:00:00Z</published>
    <updated>2015-02-06T00:00:00Z</updated>
    <summary>This post comes about indirectly by a request on IRC in #rdo for help getting nova-docker installed on Fedora 21. I ran through the process from start to finish and decided to write everything down for posterity.
Getting started I started with the Fedora 21 Cloud Image, because I&amp;rsquo;m installing onto OpenStack and the cloud images include some features that are useful in this environment.
We&amp;rsquo;ll be using OpenStack packages from the RDO Juno repository.</summary>
  </entry>
  
  <entry>
    <title>Filtering libvirt XML in Nova</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2015-02-05-filtering-libvirt-xml-in-nova/"/>
    <id>http://blog.oddbit.com/post/2015-02-05-filtering-libvirt-xml-in-nova/</id>
    <published>2015-02-05T00:00:00Z</published>
    <updated>2015-02-05T00:00:00Z</updated>
    <summary>I saw a request from a customer float by the other day regarding the ability to filter the XML used to create Nova instances in libvirt. The customer effectively wanted to blacklist a variety of devices (and device types). The consensus seems to be &amp;ldquo;you can&amp;rsquo;t do this right now and upstream is unlikely to accept patches that implement this behavior&amp;rdquo;, but it sounded like an interesting problem, so&amp;hellip;</summary>
  </entry>
  
  <entry>
    <title>Accessing the serial console of your Nova servers</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2014-12-22-accessing-the-serial-console-of-your-nova-servers/"/>
    <id>http://blog.oddbit.com/post/2014-12-22-accessing-the-serial-console-of-your-nova-servers/</id>
    <published>2014-12-22T00:00:00Z</published>
    <updated>2014-12-22T00:00:00Z</updated>
    <summary>One of the new features available in the Juno release of OpenStack is support for serial console access to your Nova servers. This post looks into how to configure the serial console feature and then how to access the serial consoles of your Nova servers.
Configuring serial console support In previous release of OpenStack, read-only access to the serial console of your servers was available through the os-getConsoleOutput server action (exposed via nova console-log on the command line).</summary>
  </entry>
  
  <entry>
    <title>Integrating custom code with Nova using hooks</title>
    <author>Lars Kellogg-Stedman</author>
    <link rel="alternate" href="http://blog.oddbit.com/post/2014-09-27-integrating-custom-code-with-n/"/>
    <id>http://blog.oddbit.com/post/2014-09-27-integrating-custom-code-with-n/</id>
    <published>2014-09-27T00:00:00Z</published>
    <updated>2014-09-27T00:00:00Z</updated>
    <summary>Would you like to run some custom Python code when Nova creates and destroys virtual instances on your compute hosts? This is possible using Nova&amp;rsquo;s support for hooks, but the existing documentation is somewhat short on examples, so I&amp;rsquo;ve spent some time trying to get things working.
The demo_nova_hooks repository contains a working example of the techniques discussed in this article.
What&amp;rsquo;s a hook? A Nova &amp;ldquo;hook&amp;rdquo; is a mechanism that allows you to attach a class of your own design to a particular function or method call in Nova.</summary>
  </entry>
  
</feed>
