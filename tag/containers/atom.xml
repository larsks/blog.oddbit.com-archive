<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Odd Bit</title>

  
  <link rel="self" href="https://blog.oddbit.com/tag/containers/atom.xml"/>
  
  <link href="https://blog.oddbit.com/tag/containers/" rel="alternate"></link>

  <updated>2022-06-20T00:00:00Z</updated>
  <id>https://blog.oddbit.com/tag/containers/</id>
  <entry>
    <title>Directing different ports to different containers with Traefik</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2022-06-20-traefik-multiple-listeners/"/>
    <id>https://blog.oddbit.com/post/2022-06-20-traefik-multiple-listeners/</id>
    <published>2022-06-20T00:00:00Z</published>
    <updated>2022-06-20T00:00:00Z</updated>
    <summary type="html">This post is mostly for myself: I find the Traefik documentation hard to navigate, so having figured this out in response to a question on Stack Overflow, I&amp;rsquo;m putting it here to help it stick in my head.
The question asks essentially how to perform port-based routing of requests to containers, so that a request for http://example.com goes to one container while a request for http://example.com:9090 goes to a different container.</summary>
  </entry>
  
  <entry>
    <title>Systemd-nspawn for fun and...well, mostly for fun</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2016-02-07-systemd-nspawn-for-fun-and-wel/"/>
    <id>https://blog.oddbit.com/post/2016-02-07-systemd-nspawn-for-fun-and-wel/</id>
    <published>2016-02-07T00:00:00Z</published>
    <updated>2016-02-07T00:00:00Z</updated>
    <summary type="html">systemd-nspawn has been called &amp;ldquo;chroot on steroids&amp;rdquo;, but if you think of it as Docker with a slightly different target you wouldn&amp;rsquo;t be far wrong, either. It can be used to spawn containers on your host, and has a variety of options for configuring the containerized environment through the use of private networking, bind mounts, capability controls, and a variety of other facilities that give you flexible container management.
There are many different ways in which it can be used.</summary>
  </entry>
  
</feed>
