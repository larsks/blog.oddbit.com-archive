<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Odd Bit</title>

  
  <link rel="self" href="https://blog.oddbit.com/tag/gpg/atom.xml"/>
  
  <link href="https://blog.oddbit.com/tag/gpg/" rel="alternate"></link>

  <updated>2022-11-13T00:00:00Z</updated>
  <id>https://blog.oddbit.com/tag/gpg/</id>
  <entry>
    <title>Using KeyOxide</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2022-11-13-using-keyoxide/"/>
    <id>https://blog.oddbit.com/post/2022-11-13-using-keyoxide/</id>
    <published>2022-11-13T00:00:00Z</published>
    <updated>2022-11-13T00:00:00Z</updated>
    <summary type="html">In today&amp;rsquo;s post, we look at KeyOxide, a service that allows you to cryptographically assert ownership of online resources using your GPG key. Some aspects of the service are less than obvious; in response to some questions I saw on Mastodon I though I would put together a short guide to making use of the service.
We&amp;rsquo;re going to look at the following high-level tasks:
  Create a GPG key</summary>
  </entry>
  
  <entry>
    <title>Getting started with KSOPS</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2021-03-09-getting-started-with-ksops/"/>
    <id>https://blog.oddbit.com/post/2021-03-09-getting-started-with-ksops/</id>
    <published>2021-03-09T00:00:00Z</published>
    <updated>2021-03-09T00:00:00Z</updated>
    <summary type="html">Kustomize is a tool for assembling Kubernetes manifests from a collection of files. We&amp;rsquo;re making extensive use of Kustomize in the operate-first project. In order to keep secrets stored in our configuration repositories, we&amp;rsquo;re using the KSOPS plugin, which enables Kustomize to use sops to encrypt/files using GPG.
In this post, I&amp;rsquo;d like to walk through the steps necessary to get everything up and running.
Set up GPG We encrypt files using GPG, so the first step is making sure that you have a GPG keypair and that your public key is published where other people can find it.</summary>
  </entry>
  
  <entry>
    <title>A note about running gpgv</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2020-10-05-a-note-about-running-gpgv/"/>
    <id>https://blog.oddbit.com/post/2020-10-05-a-note-about-running-gpgv/</id>
    <published>2020-10-05T00:00:00Z</published>
    <updated>2020-10-05T00:00:00Z</updated>
    <summary type="html">I found the following error from gpgv to be a little opaque:
gpgv: unknown type of key resource &#39;trustedkeys.kbx&#39; gpgv: keyblock resource &#39;/home/lars/.gnupg/trustedkeys.kbx&#39;: General error gpgv: Can&#39;t check signature: No public key It turns out that&amp;rsquo;s gpg-speak for &amp;ldquo;your trustedkeys.kbx keyring doesn&amp;rsquo;t exist&amp;rdquo;. That took longer to figure out than I care to admit. To get a key from your regular public keyring into your trusted keyring, you can run something like the following:</summary>
  </entry>
  
</feed>
