<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gpg on The Odd Bit</title>
    <link>https://blog.oddbit.com/tag/gpg/</link>
    <description>Recent content in gpg on The Odd Bit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tag/gpg/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started with KSOPS</title>
      <link>https://blog.oddbit.com/post/2021-03-09-getting-started-with-ksops/</link>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2021-03-09-getting-started-with-ksops/</guid>
      <description>Kustomize is a tool for assembling Kubernetes manifests from a collection of files. We&amp;rsquo;re making extensive use of Kustomize in the operate-first project. In order to keep secrets stored in our configuration repositories, we&amp;rsquo;re using the KSOPS plugin, which enables Kustomize to use sops to encrypt/files using GPG.
In this post, I&amp;rsquo;d like to walk through the steps necessary to get everything up and running.
Set up GPG We encrypt files using GPG, so the first step is making sure that you have a GPG keypair and that your public key is published where other people can find it.</description>
    </item>
    
    <item>
      <title>A note about running gpgv</title>
      <link>https://blog.oddbit.com/post/2020-10-05-a-note-about-running-gpgv/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2020-10-05-a-note-about-running-gpgv/</guid>
      <description>I found the following error from gpgv to be a little opaque:
gpgv: unknown type of key resource &#39;trustedkeys.kbx&#39; gpgv: keyblock resource &#39;/home/lars/.gnupg/trustedkeys.kbx&#39;: General error gpgv: Can&#39;t check signature: No public key It turns out that&amp;rsquo;s gpg-speak for &amp;ldquo;your trustedkeys.kbx keyring doesn&amp;rsquo;t exist&amp;rdquo;. That took longer to figure out than I care to admit. To get a key from your regular public keyring into your trusted keyring, you can run something like the following:</description>
    </item>
    
  </channel>
</rss>
