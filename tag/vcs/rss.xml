<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vcs on The Odd Bit</title>
    <link>https://blog.oddbit.com/tag/vcs/</link>
    <description>Recent content in vcs on The Odd Bit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 May 2010 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.oddbit.com/tag/vcs/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pushing a Git repository to Subversion</title>
      <link>https://blog.oddbit.com/post/2010-05-11-pushing-git-repository-to-subv/</link>
      <pubDate>Tue, 11 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2010-05-11-pushing-git-repository-to-subv/</guid>
      <description>I recently set up a git repository server (using gitosis and gitweb). Among the required features of the system was the ability to publish the git repository to a read-only Subversion repository. This sounds simple in principle but in practice proved to be a bit tricky.
Git makes an excellent Subversion client. You can use the git svn &amp;hellip; series of commands to pull a remote Subversion repository into a local git working tree and then have all the local advantages of git forcing the central code repository to change version control software.</description>
    </item>
    
  </channel>
</rss>
