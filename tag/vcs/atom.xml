<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Odd Bit</title>

  
  <link rel="self" href="https://blog.oddbit.com/tag/vcs/atom.xml"/>
  
  <link href="https://blog.oddbit.com/tag/vcs/" rel="alternate"></link>

  <updated>2010-05-11T00:00:00Z</updated>
  <id>https://blog.oddbit.com/tag/vcs/</id>
  <entry>
    <title>Pushing a Git repository to Subversion</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2010-05-11-pushing-git-repository-to-subversion/"/>
    <id>https://blog.oddbit.com/post/2010-05-11-pushing-git-repository-to-subversion/</id>
    <published>2010-05-11T00:00:00Z</published>
    <updated>2010-05-11T00:00:00Z</updated>
    <summary type="html">I recently set up a git repository server (using gitosis and gitweb). Among the required features of the system was the ability to publish the git repository to a read-only Subversion repository. This sounds simple in principle but in practice proved to be a bit tricky.
Git makes an excellent Subversion client. You can use the git svn &amp;hellip; series of commands to pull a remote Subversion repository into a local git working tree and then have all the local advantages of git forcing the central code repository to change version control software.</summary>
  </entry>
  
</feed>
