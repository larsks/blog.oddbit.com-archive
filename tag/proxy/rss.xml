<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>proxy on The Odd Bit</title>
    <link>https://blog.oddbit.com/tag/proxy/</link>
    <description>Recent content in proxy on The Odd Bit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Feb 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.oddbit.com/tag/proxy/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LDAP redundancy through proxy servers</title>
      <link>https://blog.oddbit.com/post/2010-02-24-ldap-redundancy-through-proxy-servers/</link>
      <pubDate>Wed, 24 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2010-02-24-ldap-redundancy-through-proxy-servers/</guid>
      <description>Problem 1: Failover The problem Many applications only allow you to configure a single LDAP server. This can lead to unnecessary service outages if your directory service infrastructure is highly available (e.g., you are running Active Directory) and your application cannot take advantage of this fact.
A solution We can provide a level of redundancy by passing the LDAP connections through a load balancing proxy. While this makes the proxy a single point of failure, it is (a) a very simple tool and thus less prone to complex failure modes, (b) running on the same host as the web application, and (c) is completely under our control.</description>
    </item>
    
    <item>
      <title>Merging directories with OpenLDAP&#39;s Meta backend</title>
      <link>https://blog.oddbit.com/post/2010-02-16-merging-directories-with-openldap-meta/</link>
      <pubDate>Tue, 16 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2010-02-16-merging-directories-with-openldap-meta/</guid>
      <description>This document provides an example of using OpenLDAP&#39;s meta backend to provide a unified view of two distinct LDAP directory trees. I was frustrated by the lack of simple examples available when I went looking for information on this topic, so this is my attempt to make life easier for the next person looking to do the same thing.
The particular use case that motiviated my interest in this topic was the need to configure web applications to (a) authenticate against an existing Active Directory server while (b) also allowing new accounts to be provisioned quickly and without granting any access in the AD environment.</description>
    </item>
    
  </channel>
</rss>