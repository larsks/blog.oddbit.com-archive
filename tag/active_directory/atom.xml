<feed xmlns="http://www.w3.org/2005/Atom">
  <title>The Odd Bit</title>

  
  <link rel="self" href="https://blog.oddbit.com/tag/active_directory/atom.xml"/>
  
  <link href="https://blog.oddbit.com/tag/active_directory/" rel="alternate"></link>

  <updated>2010-06-29T00:00:00Z</updated>
  <id>https://blog.oddbit.com/tag/active_directory/</id>
  <entry>
    <title>Kerberos authenticated queries to Active Directory</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2010-06-29-linux-kerberos-ad/"/>
    <id>https://blog.oddbit.com/post/2010-06-29-linux-kerberos-ad/</id>
    <published>2010-06-29T00:00:00Z</published>
    <updated>2010-06-29T00:00:00Z</updated>
    <summary type="html">There are many guides out there to help you configure your Linux system as an LDAP and Kerberos client to an Active Directory server. Most of these guides solve the problem of authentication by embedding a username and password into a configuration file somewhere on your system. While this works, it presents some problems:
 If you use a common account for authentication from all of your Linux systems, a compromise on one system means updating the configuration of all of your systems.</summary>
  </entry>
  
  <entry>
    <title>Merging directories with OpenLDAP&#39;s Meta backend</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2010-02-16-merging-directories-with-openldap-meta/"/>
    <id>https://blog.oddbit.com/post/2010-02-16-merging-directories-with-openldap-meta/</id>
    <published>2010-02-16T00:00:00Z</published>
    <updated>2010-02-16T00:00:00Z</updated>
    <summary type="html">This document provides an example of using OpenLDAP&amp;rsquo;s meta backend to provide a unified view of two distinct LDAP directory trees. I was frustrated by the lack of simple examples available when I went looking for information on this topic, so this is my attempt to make life easier for the next person looking to do the same thing.
The particular use case that motiviated my interest in this topic was the need to configure web applications to (a) authenticate against an existing Active Directory server while (b) also allowing new accounts to be provisioned quickly and without granting any access in the AD environment.</summary>
  </entry>
  
</feed>
