<feed xmlns="http://www.w3.org/2005/Atom">
  <title>arduino on The Odd Bit</title>

  
  <link rel="self" href="https://blog.oddbit.com/tag/arduino/atom.xml"/>
  
  <link href="https://blog.oddbit.com/tag/arduino/" rel="alternate"></link>

  <updated>2020-04-15T00:00:00Z</updated>
  <id>https://blog.oddbit.com/tag/arduino/</id>
  
  <entry>
    <title>Grove Beginner Kit for Arduino (part 1)</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2020-04-15-grove-beginner-kit-for-arduino/"/>
    <id>https://blog.oddbit.com/post/2020-04-15-grove-beginner-kit-for-arduino/</id>
    <published>2020-04-15T00:00:00Z</published>
    <updated>2020-04-15T00:00:00Z</updated>
    <summary type="html">The folks at Seeed Studio have just released the Grove Beginner Kit for Arduino, and they asked if I would be willing to take a look at it in exchange for a free kit. At first glance it reminds me of the Radio Shack (remember when they were cool?) electronics kit I had when I was a kid &amp;ndash; but somewhat more advanced. I&#39;m excited to take a closer look, but given shipping these days means it&#39;s probably a month away at least.</summary>
  </entry>
  
  <entry>
    <title>I see you have the machine that goes ping...</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2020-03-20-i-see-you-have-the-machine-tha/"/>
    <id>https://blog.oddbit.com/post/2020-03-20-i-see-you-have-the-machine-tha/</id>
    <published>2020-03-20T00:00:00Z</published>
    <updated>2020-03-20T00:00:00Z</updated>
    <summary type="html">We&#39;re all looking for ways to keep ourselves occupied these days, and for me that means leaping at the chance to turn a small problem into a slightly ridiculous electronics project. For reasons that I won&#39;t go into here I wanted to generate an alert when a certain WiFi BSSID becomes visible. A simple solution to this problem would have been a few lines of shell script to send me an email&amp;hellip;but this article isn&#39;t about simple solutions!</summary>
  </entry>
  
  <entry>
    <title>PiPower: A Raspberry Pi UPS</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2019-01-19-pipower-a-raspberry-pi-ups/"/>
    <id>https://blog.oddbit.com/post/2019-01-19-pipower-a-raspberry-pi-ups/</id>
    <published>2019-01-19T00:00:00Z</published>
    <updated>2019-01-19T00:00:00Z</updated>
    <summary type="html">I have a Raspberry Pi running RetroPie hooked up to a television. It&#39;s powered from a USB port on the TV, which is convenient, but it means that whenever we shut off the TV we&#39;re pulling the plug on the Pi. While there haven&#39;t been any problems so far, this is a classic recipe for filesystem problems or data loss at some point. I started looking into UPS options to alleviate this issue.</summary>
  </entry>
  
  <entry>
    <title>I2C on the Raspberry Pi</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2013-03-12-i2c-on-the-raspberry/"/>
    <id>https://blog.oddbit.com/post/2013-03-12-i2c-on-the-raspberry/</id>
    <published>2013-03-12T00:00:00Z</published>
    <updated>2013-03-12T00:00:00Z</updated>
    <summary type="html">I&#39;ve set up my Raspberry Pi to communicate with my Arduino via I2C. The Raspberry Pi is a 3.3v device and the Arduino is a 5v device. While in general this means that you need to use a level converter when connecting the two devices, you don&#39;t need to use a level converter when connecting the Arduino to the Raspberry Pi via I2C.
The design of the I2C bus is such that the only device driving a voltage on the bus is the master (in this case, the Raspberry Pi), via pull-up resistors.</summary>
  </entry>
  
  <entry>
    <title>Controlling a servo with your Arduino</title>
    <author>
      <name>Lars Kellogg-Stedman</name>
    </author>
    <link rel="alternate" href="https://blog.oddbit.com/post/2013-03-07-controlling-a-servo/"/>
    <id>https://blog.oddbit.com/post/2013-03-07-controlling-a-servo/</id>
    <published>2013-03-07T00:00:00Z</published>
    <updated>2013-03-07T00:00:00Z</updated>
    <summary type="html">I&#39;ve recently started playing with an Arduino kit I purchased a year ago (and only just now got around to unboxing). I purchased the kit from SparkFun, and it includes a motley collection of resistors, LEDs, a motor, a servo, and more.
I was fiddling around with this exercise, which uses the SoftwareServo library to control a servo. Using this library, you just pass it an angle and the library takes care of everything else, e.</summary>
  </entry>
  
</feed>
