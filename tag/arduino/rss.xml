<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>arduino on The Odd Bit</title>
    <link>https://blog.oddbit.com/tag/arduino/</link>
    <description>Recent content in arduino on The Odd Bit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.oddbit.com/tag/arduino/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>I see you have the machine that goes ping...</title>
      <link>https://blog.oddbit.com/post/2020-03-20-i-see-you-have-the-machine-tha/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2020-03-20-i-see-you-have-the-machine-tha/</guid>
      <description>We&#39;re all looking for ways to keep ourselves occupied these days, and for me that means leaping at the chance to turn a small problem into a slightly ridiculous electronics project. For reasons that I won&#39;t go into here I wanted to generate an alert when a certain WiFi BSSID becomes visible. A simple solution to this problem would have been a few lines of shell script to send me an email&amp;hellip;but this article isn&#39;t about simple solutions!</description>
    </item>
    
    <item>
      <title>PiPower: A Raspberry Pi UPS</title>
      <link>https://blog.oddbit.com/post/2019-01-19-pipower-a-raspberry-pi-ups/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2019-01-19-pipower-a-raspberry-pi-ups/</guid>
      <description>I have a Raspberry Pi running RetroPie hooked up to a television. It&#39;s powered from a USB port on the TV, which is convenient, but it means that whenever we shut off the TV we&#39;re pulling the plug on the Pi. While there haven&#39;t been any problems so far, this is a classic recipe for filesystem problems or data loss at some point. I started looking into UPS options to alleviate this issue.</description>
    </item>
    
    <item>
      <title>I2C on the Raspberry Pi</title>
      <link>https://blog.oddbit.com/post/2013-03-12-i2c-on-the-raspberry/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2013-03-12-i2c-on-the-raspberry/</guid>
      <description>I&#39;ve set up my Raspberry Pi to communicate with my Arduino via I2C. The Raspberry Pi is a 3.3v device and the Arduino is a 5v device. While in general this means that you need to use a level converter when connecting the two devices, you don&#39;t need to use a level converter when connecting the Arduino to the Raspberry Pi via I2C.
The design of the I2C bus is such that the only device driving a voltage on the bus is the master (in this case, the Raspberry Pi), via pull-up resistors.</description>
    </item>
    
    <item>
      <title>Controlling a servo with your Arduino</title>
      <link>https://blog.oddbit.com/post/2013-03-07-controlling-a-servo/</link>
      <pubDate>Thu, 07 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2013-03-07-controlling-a-servo/</guid>
      <description>I&#39;ve recently started playing with an Arduino kit I purchased a year ago (and only just now got around to unboxing). I purchased the kit from SparkFun, and it includes a motley collection of resistors, LEDs, a motor, a servo, and more.
I was fiddling around with this exercise, which uses the SoftwareServo library to control a servo. Using this library, you just pass it an angle and the library takes care of everything else, e.</description>
    </item>
    
  </channel>
</rss>