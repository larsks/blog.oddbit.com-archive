<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rfb on The Odd Bit</title>
    <link>https://blog.oddbit.com/tag/rfb/</link>
    <description>Recent content in rfb on The Odd Bit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Feb 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.oddbit.com/tag/rfb/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blocking VNC with iptables</title>
      <link>https://blog.oddbit.com/post/2010-02-04-vnc-blockingrst/</link>
      <pubDate>Thu, 04 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.oddbit.com/post/2010-02-04-vnc-blockingrst/</guid>
      <description>VNC clients use the RFB protocol to provide virtual display capabilities. The RFB protocol, as implemented by most clients, provides very poor authentication options. While passwords are not actually sent &amp;ldquo;in the clear&amp;rdquo;, it is possible to brute force them based on information available on the wire. The RFB 3.x protocol limits passwords to a maximum of eight characters, so the potential key space is relatively small.
It&#39;s possible to securely connect to a remote VNC server by tunneling your connection using ssh port forwarding (or setting up some sort of SSL proxy).</description>
    </item>
    
  </channel>
</rss>